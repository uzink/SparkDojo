{"paragraphs":[{"text":"%md\n\n##Basic Example","dateUpdated":"Apr 21, 2016 6:20:58 PM","config":{"colWidth":12,"editorMode":"ace/mode/markdown","editorHide":true,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1461259258252_-1272570551","id":"20160421-182058_1279337494","result":{"code":"SUCCESS","type":"HTML","msg":"<h2>Basic Example</h2>\n"},"dateCreated":"Apr 21, 2016 6:20:58 PM","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:53"},{"text":"import org.apache.spark._\nimport org.apache.spark.streaming._\n\n// Create a local StreamingContext with two working thread and batch interval of 1 second.\n// The master requires 2 cores to prevent from a starvation scenario.\n\nval ssc = new StreamingContext(sc, Seconds(2))","dateUpdated":"Apr 21, 2016 7:02:54 PM","config":{"colWidth":12,"editorMode":"ace/mode/scala","graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1461259258260_-1262951828","id":"20160421-182058_1071877989","result":{"code":"SUCCESS","type":"TEXT","msg":"import org.apache.spark._\nimport org.apache.spark.streaming._\nssc: org.apache.spark.streaming.StreamingContext = org.apache.spark.streaming.StreamingContext@5b336430\n"},"dateCreated":"Apr 21, 2016 6:20:58 PM","dateStarted":"Apr 21, 2016 7:02:54 PM","dateFinished":"Apr 21, 2016 7:03:26 PM","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:54"},{"text":"// Create a DStream that will connect to hostname:port, like localhost:9999\nval lines = ssc.socketTextStream(\"localhost\", 9999)","dateUpdated":"Apr 21, 2016 7:02:56 PM","config":{"colWidth":12,"editorMode":"ace/mode/scala","graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1461259258261_-1263336577","id":"20160421-182058_1230291706","result":{"code":"SUCCESS","type":"TEXT","msg":"lines: org.apache.spark.streaming.dstream.ReceiverInputDStream[String] = org.apache.spark.streaming.dstream.SocketInputDStream@2193e88f\n"},"dateCreated":"Apr 21, 2016 6:20:58 PM","dateStarted":"Apr 21, 2016 7:02:56 PM","dateFinished":"Apr 21, 2016 7:03:27 PM","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:55"},{"text":"// Split each line into words\nval words = lines.flatMap(_.split(\" \"))","dateUpdated":"Apr 21, 2016 7:03:20 PM","config":{"colWidth":12,"editorMode":"ace/mode/scala","graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1461259258261_-1263336577","id":"20160421-182058_649371409","result":{"code":"SUCCESS","type":"TEXT","msg":"words: org.apache.spark.streaming.dstream.DStream[String] = org.apache.spark.streaming.dstream.FlatMappedDStream@53833405\n"},"dateCreated":"Apr 21, 2016 6:20:58 PM","dateStarted":"Apr 21, 2016 7:03:27 PM","dateFinished":"Apr 21, 2016 7:03:29 PM","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:56"},{"text":"// Count each word in each batch\nval pairs = words.map(word => (word, 1))\nval wordCounts = pairs.reduceByKey(_ + _)\n\n// Print the first ten elements of each RDD generated in this DStream to the console\nwordCounts.print()\n\nssc.start()    ","dateUpdated":"Apr 21, 2016 7:03:37 PM","config":{"colWidth":12,"editorMode":"ace/mode/scala","graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1461259258263_-1262567079","id":"20160421-182058_1602949859","result":{"code":"SUCCESS","type":"TEXT","msg":"pairs: org.apache.spark.streaming.dstream.DStream[(String, Int)] = org.apache.spark.streaming.dstream.MappedDStream@44ff686\nwordCounts: org.apache.spark.streaming.dstream.DStream[(String, Int)] = org.apache.spark.streaming.dstream.ShuffledDStream@1f1ed757\n"},"dateCreated":"Apr 21, 2016 6:20:58 PM","dateStarted":"Apr 21, 2016 7:03:38 PM","dateFinished":"Apr 21, 2016 7:03:40 PM","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:57"},{"text":"%sh\n\nnc -lk 9999\n\nto be or not to be","dateUpdated":"Apr 21, 2016 6:20:58 PM","config":{"colWidth":12,"editorMode":"ace/mode/sh","graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1461259258265_-1264875573","id":"20160421-182058_2083530448","result":{"code":"ERROR","type":"TEXT","msg":"nc: Address already in use\nbash: line 2: to: command not found\nExitValue: 127"},"dateCreated":"Apr 21, 2016 6:20:58 PM","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:58"},{"text":"%md\n\n## Twitter stream","dateUpdated":"Apr 21, 2016 6:20:58 PM","config":{"colWidth":12,"editorMode":"ace/mode/markdown","editorHide":true,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1461259258265_-1264875573","id":"20160421-182058_320633022","result":{"code":"SUCCESS","type":"HTML","msg":"<h2>Twitter stream</h2>\n"},"dateCreated":"Apr 21, 2016 6:20:58 PM","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:59"},{"text":"%dep\nz.reset\nz.load(\"org.apache.spark:spark-streaming-twitter_2.10:1.5.1\")","dateUpdated":"Apr 21, 2016 7:04:43 PM","config":{"colWidth":12,"editorMode":"ace/mode/scala","graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1461259258268_-1266029820","id":"20160421-182058_998851124","result":{"code":"SUCCESS","type":"TEXT","msg":"DepInterpreter(%dep) deprecated. Remove dependencies and repositories through GUI interpreter menu instead.\nDepInterpreter(%dep) deprecated. Load dependency through GUI interpreter menu instead.\nres0: org.apache.zeppelin.dep.Dependency = org.apache.zeppelin.dep.Dependency@467a47fb\n"},"dateCreated":"Apr 21, 2016 6:20:58 PM","dateStarted":"Apr 21, 2016 7:04:43 PM","dateFinished":"Apr 21, 2016 7:04:52 PM","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:60"},{"text":"import org.apache.spark.streaming._\nimport org.apache.spark.streaming.twitter._\nimport org.apache.spark.storage.StorageLevel\nimport scala.io.Source\nimport scala.collection.mutable.HashMap\nimport java.io.File\nimport org.apache.log4j.Logger\nimport org.apache.log4j.Level\nimport sys.process.stringSeqToProcess","dateUpdated":"Apr 21, 2016 7:04:56 PM","config":{"colWidth":12,"editorMode":"ace/mode/scala","graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1461259258268_-1266029820","id":"20160421-182058_2122867393","result":{"code":"SUCCESS","type":"TEXT","msg":"import org.apache.spark.streaming._\nimport org.apache.spark.streaming.twitter._\nimport org.apache.spark.storage.StorageLevel\nimport scala.io.Source\nimport scala.collection.mutable.HashMap\nimport java.io.File\nimport org.apache.log4j.Logger\nimport org.apache.log4j.Level\nimport sys.process.stringSeqToProcess\n"},"dateCreated":"Apr 21, 2016 6:20:58 PM","dateStarted":"Apr 21, 2016 7:04:56 PM","dateFinished":"Apr 21, 2016 7:05:21 PM","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:61"},{"text":"%md\n\n###Creating a Twitter App\n\nGo to https://apps.twitter.com/\nClick on **Create new app**\nEnter **Name, Description,website** and **callback url** then click **create your twitter application**\n\n<hr />\n![](http://localhost/twitterApp.png)\n\n<hr />","dateUpdated":"Apr 21, 2016 6:27:00 PM","config":{"colWidth":12,"editorMode":"ace/mode/markdown","editorHide":false,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1461259258269_-1266414568","id":"20160421-182058_1510349547","result":{"code":"SUCCESS","type":"HTML","msg":"<h3>Creating a Twitter App</h3>\n<p>Go to https://apps.twitter.com/\n<br  />Click on <strong>Create new app</strong>\n<br  />Enter <strong>Name, Description,website</strong> and <strong>callback url</strong> then click <strong>create your twitter application</strong></p>\n<hr />\n<p><img src=\"http://localhost/twitterApp.png\" alt=\"\" /></p>\n<hr />\n"},"dateCreated":"Apr 21, 2016 6:20:58 PM","dateStarted":"Apr 21, 2016 6:27:00 PM","dateFinished":"Apr 21, 2016 6:27:01 PM","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:62"},{"text":"\n/** Configures the Oauth Credentials for accessing Twitter */\ndef configureTwitterCredentials(apiKey: String, apiSecret: String, accessToken: String, accessTokenSecret: String) {\n  val configs = new HashMap[String, String] ++= Seq(\n    \"apiKey\" -> apiKey, \"apiSecret\" -> apiSecret, \"accessToken\" -> accessToken, \"accessTokenSecret\" -> accessTokenSecret)\n  println(\"Configuring Twitter OAuth\")\n  configs.foreach{ case(key, value) =>\n    if (value.trim.isEmpty) {\n      throw new Exception(\"Error setting authentication - value for \" + key + \" not set\")\n    }\n    val fullKey = \"twitter4j.oauth.\" + key.replace(\"api\", \"consumer\")\n    System.setProperty(fullKey, value.trim)\n    println(\"\\tProperty \" + fullKey + \" set as [\" + value.trim + \"]\")\n  }\n  println()\n}\n\n// Configure Twitter credentials\nval apiKey = \"Your data\"\nval apiSecret = \"Your data\"\nval accessToken = \"Your data\"\nval accessTokenSecret = \"Your data\"\nconfigureTwitterCredentials(apiKey, apiSecret, accessToken, accessTokenSecret)\n\nval ssc = new StreamingContext(sc, Seconds(2))\nval tweets = TwitterUtils.createStream(ssc, None)\nval twt = tweets.window(Seconds(60))","dateUpdated":"Apr 21, 2016 9:49:24 PM","config":{"colWidth":12,"editorMode":"ace/mode/scala","graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1461259258269_-1266414568","id":"20160421-182058_1428541306","dateCreated":"Apr 21, 2016 6:20:58 PM","dateStarted":"Apr 21, 2016 7:07:26 PM","dateFinished":"Apr 21, 2016 7:07:31 PM","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:63","errorMessage":"","focus":true},{"text":"\nimport org.apache.spark.streaming.twitter._\n\n\ncase class Tweet(createdAt:Long, text:String)\ntwt.map(status=>\n  Tweet(status.getCreatedAt().getTime()/1000, status.getText())\n).foreachRDD(rdd=>\n  // Below line works only in spark 1.3.0.\n  // For spark 1.1.x and spark 1.2.x,\n  // use rdd.registerTempTable(\"tweets\") instead.\n  rdd.toDF().registerTempTable(\"tweets\")\n)\n\ntwt.print\n\nssc.start()\n\n\n","dateUpdated":"Apr 21, 2016 7:07:34 PM","config":{"colWidth":12,"editorMode":"ace/mode/scala","graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"tableHide":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1461259258270_-1265260322","id":"20160421-182058_609005320","result":{"code":"SUCCESS","type":"TEXT","msg":"import org.apache.spark.streaming.twitter._\ndefined class Tweet\n"},"dateCreated":"Apr 21, 2016 6:20:58 PM","dateStarted":"Apr 21, 2016 7:07:34 PM","dateFinished":"Apr 21, 2016 7:07:37 PM","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:64"},{"title":"Let's begin by extracting maximum 10 tweets which contain the word \"girl\".","text":"%sql select * from tweets where text like '%girl%' limit 10 ","dateUpdated":"Apr 21, 2016 7:08:01 PM","config":{"colWidth":12,"editorMode":"ace/mode/sql","title":true,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[{"name":"createdAt","index":0,"aggr":"sum"}],"values":[{"name":"text","index":1,"aggr":"sum"}],"groups":[],"scatter":{"xAxis":{"name":"createdAt","index":0,"aggr":"sum"},"yAxis":{"name":"text","index":1,"aggr":"sum"}}},"enabled":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1461259258270_-1265260322","id":"20160421-182058_426729258","result":{"code":"SUCCESS","type":"TABLE","msg":"createdAt\ttext\n1461261856\tRT @younggwhite: Prince had the most secure masculinity out of anyone ever to step foot on this earth. He could out-dress your girlfriend &…\n1461262060\tRT @TweetLikeAGirI: Rare footage of every girl out there https://t.co/f7BoJMkzBr\n1461262047\tRT @girlposts: my heart just broke into a million pieces 💔💔💔😭😭😭 https://t.co/ORWqhRvW6A\n1461262051\tgirlfriend & smash her as well (2/2)\n1461262073\tRT @girlposts: You shouldn’t be sad because sad spelled backwards is das and das not gud.\n1461261868\tI think that I'm done                 with ya girlfriend\n1461262079\t@pretttygirltay lmfao accurate! 💯😂\n1461262080\tNew 4-member girl group MIXX prepares to debut https://t.co/GTCzlKnJ09\n","comment":"","msgTable":[[{"key":"text","value":"1461261856"},{"key":"text","value":"RT @younggwhite: Prince had the most secure masculinity out of anyone ever to step foot on this earth. He could out-dress your girlfriend &…"}],[{"value":"1461262060"},{"value":"RT @TweetLikeAGirI: Rare footage of every girl out there https://t.co/f7BoJMkzBr"}],[{"value":"1461262047"},{"value":"RT @girlposts: my heart just broke into a million pieces 💔💔💔😭😭😭 https://t.co/ORWqhRvW6A"}],[{"value":"1461262051"},{"value":"girlfriend & smash her as well (2/2)"}],[{"value":"1461262073"},{"value":"RT @girlposts: You shouldn’t be sad because sad spelled backwards is das and das not gud."}],[{"value":"1461261868"},{"value":"I think that I'm done                 with ya girlfriend"}],[{"value":"1461262079"},{"value":"@pretttygirltay lmfao accurate! 💯😂"}],[{"value":"1461262080"},{"value":"New 4-member girl group MIXX prepares to debut https://t.co/GTCzlKnJ09"}]],"columnNames":[{"name":"createdAt","index":0,"aggr":"sum"},{"name":"text","index":1,"aggr":"sum"}],"rows":[["1461261856","RT @younggwhite: Prince had the most secure masculinity out of anyone ever to step foot on this earth. He could out-dress your girlfriend &…"],["1461262060","RT @TweetLikeAGirI: Rare footage of every girl out there https://t.co/f7BoJMkzBr"],["1461262047","RT @girlposts: my heart just broke into a million pieces 💔💔💔😭😭😭 https://t.co/ORWqhRvW6A"],["1461262051","girlfriend & smash her as well (2/2)"],["1461262073","RT @girlposts: You shouldn’t be sad because sad spelled backwards is das and das not gud."],["1461261868","I think that I'm done                 with ya girlfriend"],["1461262079","@pretttygirltay lmfao accurate! 💯😂"],["1461262080","New 4-member girl group MIXX prepares to debut https://t.co/GTCzlKnJ09"]]},"dateCreated":"Apr 21, 2016 6:20:58 PM","dateStarted":"Apr 21, 2016 7:08:01 PM","dateFinished":"Apr 21, 2016 7:08:04 PM","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:65"},{"title":"This time suppose we want to see how many tweets have been created per sec during last 60 sec. To do this, run:","text":"%sql select createdAt, count(1) AS Number_Created from tweets group by createdAt order by createdAt","dateUpdated":"Apr 21, 2016 7:08:22 PM","config":{"colWidth":12,"editorMode":"ace/mode/sql","title":true,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[{"name":"createdAt","index":0,"aggr":"sum"}],"values":[],"groups":[],"scatter":{"xAxis":{"name":"createdAt","index":0,"aggr":"sum"}}},"enabled":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1461259258272_-1279880780","id":"20160421-182058_1943330734","result":{"code":"SUCCESS","type":"TABLE","msg":"createdAt\tNumber_Created\n1461261784\t1\n1461261785\t1\n1461261786\t2\n1461261789\t2\n1461261790\t4\n1461261791\t2\n1461261792\t1\n1461261793\t3\n1461261794\t1\n1461261795\t1\n1461261797\t2\n1461261799\t1\n1461261805\t1\n1461261806\t1\n1461261807\t1\n1461261808\t1\n1461261809\t1\n1461261810\t4\n1461261812\t2\n1461261813\t1\n1461261814\t1\n1461261815\t2\n1461261818\t1\n1461261856\t1\n1461261857\t1\n1461261863\t1\n1461261865\t2\n1461261866\t1\n1461261868\t1\n1461261871\t1\n1461261872\t1\n1461261875\t1\n1461261876\t1\n1461261877\t1\n1461261878\t1\n1461261879\t1\n1461261881\t1\n1461261882\t3\n1461261885\t1\n1461261887\t1\n1461261889\t1\n1461261891\t2\n1461261892\t1\n1461261893\t4\n1461261899\t1\n1461261903\t2\n1461261906\t1\n1461261949\t2\n1461261954\t2\n1461261957\t1\n1461261962\t1\n1461261964\t1\n1461261967\t1\n1461261968\t1\n1461261969\t1\n1461261970\t1\n1461262041\t1\n1461262047\t3\n1461262048\t2\n1461262049\t2\n1461262051\t2\n1461262052\t3\n1461262053\t1\n1461262054\t2\n1461262059\t18\n1461262060\t47\n1461262061\t49\n1461262062\t45\n1461262063\t42\n1461262064\t36\n1461262065\t39\n1461262066\t52\n1461262067\t43\n1461262068\t57\n1461262069\t37\n1461262070\t40\n1461262071\t48\n1461262072\t47\n1461262073\t52\n1461262074\t57\n1461262075\t41\n1461262076\t43\n1461262077\t44\n1461262078\t31\n1461262079\t43\n1461262080\t52\n1461262081\t33\n1461262082\t47\n1461262083\t41\n1461262084\t47\n1461262085\t36\n1461262086\t65\n1461262087\t49\n1461262088\t44\n1461262089\t33\n1461262090\t50\n1461262091\t48\n1461262092\t45\n1461262093\t49\n1461262094\t42\n1461262095\t50\n1461262096\t44\n1461262097\t35\n1461262098\t39\n1461262099\t50\n1461262100\t45\n","comment":"","msgTable":[[{"key":"Number_Created","value":"1461261784"},{"key":"Number_Created","value":"1"}],[{"value":"1461261785"},{"value":"1"}],[{"value":"1461261786"},{"value":"2"}],[{"value":"1461261789"},{"value":"2"}],[{"value":"1461261790"},{"value":"4"}],[{"value":"1461261791"},{"value":"2"}],[{"value":"1461261792"},{"value":"1"}],[{"value":"1461261793"},{"value":"3"}],[{"value":"1461261794"},{"value":"1"}],[{"value":"1461261795"},{"value":"1"}],[{"value":"1461261797"},{"value":"2"}],[{"value":"1461261799"},{"value":"1"}],[{"value":"1461261805"},{"value":"1"}],[{"value":"1461261806"},{"value":"1"}],[{"value":"1461261807"},{"value":"1"}],[{"value":"1461261808"},{"value":"1"}],[{"value":"1461261809"},{"value":"1"}],[{"value":"1461261810"},{"value":"4"}],[{"value":"1461261812"},{"value":"2"}],[{"value":"1461261813"},{"value":"1"}],[{"value":"1461261814"},{"value":"1"}],[{"value":"1461261815"},{"value":"2"}],[{"value":"1461261818"},{"value":"1"}],[{"value":"1461261856"},{"value":"1"}],[{"value":"1461261857"},{"value":"1"}],[{"value":"1461261863"},{"value":"1"}],[{"value":"1461261865"},{"value":"2"}],[{"value":"1461261866"},{"value":"1"}],[{"value":"1461261868"},{"value":"1"}],[{"value":"1461261871"},{"value":"1"}],[{"value":"1461261872"},{"value":"1"}],[{"value":"1461261875"},{"value":"1"}],[{"value":"1461261876"},{"value":"1"}],[{"value":"1461261877"},{"value":"1"}],[{"value":"1461261878"},{"value":"1"}],[{"value":"1461261879"},{"value":"1"}],[{"value":"1461261881"},{"value":"1"}],[{"value":"1461261882"},{"value":"3"}],[{"value":"1461261885"},{"value":"1"}],[{"value":"1461261887"},{"value":"1"}],[{"value":"1461261889"},{"value":"1"}],[{"value":"1461261891"},{"value":"2"}],[{"value":"1461261892"},{"value":"1"}],[{"value":"1461261893"},{"value":"4"}],[{"value":"1461261899"},{"value":"1"}],[{"value":"1461261903"},{"value":"2"}],[{"value":"1461261906"},{"value":"1"}],[{"value":"1461261949"},{"value":"2"}],[{"value":"1461261954"},{"value":"2"}],[{"value":"1461261957"},{"value":"1"}],[{"value":"1461261962"},{"value":"1"}],[{"value":"1461261964"},{"value":"1"}],[{"value":"1461261967"},{"value":"1"}],[{"value":"1461261968"},{"value":"1"}],[{"value":"1461261969"},{"value":"1"}],[{"value":"1461261970"},{"value":"1"}],[{"value":"1461262041"},{"value":"1"}],[{"value":"1461262047"},{"value":"3"}],[{"value":"1461262048"},{"value":"2"}],[{"value":"1461262049"},{"value":"2"}],[{"value":"1461262051"},{"value":"2"}],[{"value":"1461262052"},{"value":"3"}],[{"value":"1461262053"},{"value":"1"}],[{"value":"1461262054"},{"value":"2"}],[{"value":"1461262059"},{"value":"18"}],[{"value":"1461262060"},{"value":"47"}],[{"value":"1461262061"},{"value":"49"}],[{"value":"1461262062"},{"value":"45"}],[{"value":"1461262063"},{"value":"42"}],[{"value":"1461262064"},{"value":"36"}],[{"value":"1461262065"},{"value":"39"}],[{"value":"1461262066"},{"value":"52"}],[{"value":"1461262067"},{"value":"43"}],[{"value":"1461262068"},{"value":"57"}],[{"value":"1461262069"},{"value":"37"}],[{"value":"1461262070"},{"value":"40"}],[{"value":"1461262071"},{"value":"48"}],[{"value":"1461262072"},{"value":"47"}],[{"value":"1461262073"},{"value":"52"}],[{"value":"1461262074"},{"value":"57"}],[{"value":"1461262075"},{"value":"41"}],[{"value":"1461262076"},{"value":"43"}],[{"value":"1461262077"},{"value":"44"}],[{"value":"1461262078"},{"value":"31"}],[{"value":"1461262079"},{"value":"43"}],[{"value":"1461262080"},{"value":"52"}],[{"value":"1461262081"},{"value":"33"}],[{"value":"1461262082"},{"value":"47"}],[{"value":"1461262083"},{"value":"41"}],[{"value":"1461262084"},{"value":"47"}],[{"value":"1461262085"},{"value":"36"}],[{"value":"1461262086"},{"value":"65"}],[{"value":"1461262087"},{"value":"49"}],[{"value":"1461262088"},{"value":"44"}],[{"value":"1461262089"},{"value":"33"}],[{"value":"1461262090"},{"value":"50"}],[{"value":"1461262091"},{"value":"48"}],[{"value":"1461262092"},{"value":"45"}],[{"value":"1461262093"},{"value":"49"}],[{"value":"1461262094"},{"value":"42"}],[{"value":"1461262095"},{"value":"50"}],[{"value":"1461262096"},{"value":"44"}],[{"value":"1461262097"},{"value":"35"}],[{"value":"1461262098"},{"value":"39"}],[{"value":"1461262099"},{"value":"50"}],[{"value":"1461262100"},{"value":"45"}]],"columnNames":[{"name":"createdAt","index":0,"aggr":"sum"},{"name":"Number_Created","index":1,"aggr":"sum"}],"rows":[["1461261784","1"],["1461261785","1"],["1461261786","2"],["1461261789","2"],["1461261790","4"],["1461261791","2"],["1461261792","1"],["1461261793","3"],["1461261794","1"],["1461261795","1"],["1461261797","2"],["1461261799","1"],["1461261805","1"],["1461261806","1"],["1461261807","1"],["1461261808","1"],["1461261809","1"],["1461261810","4"],["1461261812","2"],["1461261813","1"],["1461261814","1"],["1461261815","2"],["1461261818","1"],["1461261856","1"],["1461261857","1"],["1461261863","1"],["1461261865","2"],["1461261866","1"],["1461261868","1"],["1461261871","1"],["1461261872","1"],["1461261875","1"],["1461261876","1"],["1461261877","1"],["1461261878","1"],["1461261879","1"],["1461261881","1"],["1461261882","3"],["1461261885","1"],["1461261887","1"],["1461261889","1"],["1461261891","2"],["1461261892","1"],["1461261893","4"],["1461261899","1"],["1461261903","2"],["1461261906","1"],["1461261949","2"],["1461261954","2"],["1461261957","1"],["1461261962","1"],["1461261964","1"],["1461261967","1"],["1461261968","1"],["1461261969","1"],["1461261970","1"],["1461262041","1"],["1461262047","3"],["1461262048","2"],["1461262049","2"],["1461262051","2"],["1461262052","3"],["1461262053","1"],["1461262054","2"],["1461262059","18"],["1461262060","47"],["1461262061","49"],["1461262062","45"],["1461262063","42"],["1461262064","36"],["1461262065","39"],["1461262066","52"],["1461262067","43"],["1461262068","57"],["1461262069","37"],["1461262070","40"],["1461262071","48"],["1461262072","47"],["1461262073","52"],["1461262074","57"],["1461262075","41"],["1461262076","43"],["1461262077","44"],["1461262078","31"],["1461262079","43"],["1461262080","52"],["1461262081","33"],["1461262082","47"],["1461262083","41"],["1461262084","47"],["1461262085","36"],["1461262086","65"],["1461262087","49"],["1461262088","44"],["1461262089","33"],["1461262090","50"],["1461262091","48"],["1461262092","45"],["1461262093","49"],["1461262094","42"],["1461262095","50"],["1461262096","44"],["1461262097","35"],["1461262098","39"],["1461262099","50"],["1461262100","45"]]},"dateCreated":"Apr 21, 2016 6:20:58 PM","dateStarted":"Apr 21, 2016 7:08:22 PM","dateFinished":"Apr 21, 2016 7:08:30 PM","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:66"},{"text":"//You can make user-defined function and use it in Spark SQL. Let's try it by making function named sentiment. This function will return one of the three attitudes(positive, negative, neutral) towards the parameter.\n\ndef sentiment(s:String) : String = {\n    val positive = Array(\"like\", \"love\", \"good\", \"great\", \"happy\", \"cool\", \"the\", \"one\", \"that\")\n    val negative = Array(\"hate\", \"bad\", \"stupid\", \"is\")\n\n    var st = 0;\n\n    val words = s.split(\" \")    \n    positive.foreach(p =>\n        words.foreach(w =>\n            if(p==w) st = st+1\n        )\n    )\n\n    negative.foreach(p=>\n        words.foreach(w=>\n            if(p==w) st = st-1\n        )\n    )\n    if(st>0)\n        \"positivie\"\n    else if(st<0)\n        \"negative\"\n    else\n        \"neutral\"\n}\n\n// Below line works only in spark 1.3.0.\n// For spark 1.1.x and spark 1.2.x,\n// use sqlc.registerFunction(\"sentiment\", sentiment _) instead.\nsqlc.udf.register(\"sentiment\", sentiment _)","dateUpdated":"Apr 21, 2016 7:09:13 PM","config":{"colWidth":12,"editorMode":"ace/mode/scala","graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1461259258277_-1281804524","id":"20160421-182058_141656241","result":{"code":"SUCCESS","type":"TEXT","msg":"sentiment: (s: String)String\nres23: org.apache.spark.sql.UserDefinedFunction = UserDefinedFunction(<function1>,StringType,List(StringType))\n"},"dateCreated":"Apr 21, 2016 6:20:58 PM","dateStarted":"Apr 21, 2016 7:09:13 PM","dateFinished":"Apr 21, 2016 7:09:15 PM","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:67"},{"title":"To check how people think about girls using sentiment function we've made above, run this:","text":"%sql select sentiment(text) AS Sentiment, count(1) AS Number from tweets where text like '%girl%' group by sentiment(text)","dateUpdated":"Apr 21, 2016 7:19:11 PM","config":{"lineNumbers":false,"colWidth":12,"editorMode":"ace/mode/sql","title":true,"graph":{"mode":"pieChart","height":300,"optionOpen":false,"keys":[{"name":"Sentiment","index":0,"aggr":"sum"}],"values":[{"name":"Number","index":1,"aggr":"sum"}],"groups":[],"scatter":{"xAxis":{"name":"Sentiment","index":0,"aggr":"sum"},"yAxis":{"name":"Number","index":1,"aggr":"sum"}}},"enabled":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1461259258283_-1282574022","id":"20160421-182058_1225022040","result":{"code":"SUCCESS","type":"TABLE","msg":"Sentiment\tNumber\npositivie\t9\nnegative\t2\nneutral\t13\n","comment":"","msgTable":[[{"key":"Number","value":"positivie"},{"key":"Number","value":"9"}],[{"value":"negative"},{"value":"2"}],[{"value":"neutral"},{"value":"13"}]],"columnNames":[{"name":"Sentiment","index":0,"aggr":"sum"},{"name":"Number","index":1,"aggr":"sum"}],"rows":[["positivie","9"],["negative","2"],["neutral","13"]]},"dateCreated":"Apr 21, 2016 6:20:58 PM","dateStarted":"Apr 21, 2016 7:09:19 PM","dateFinished":"Apr 21, 2016 7:09:23 PM","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:68"},{"text":"","dateUpdated":"Apr 21, 2016 6:20:58 PM","config":{"colWidth":12,"editorMode":"ace/mode/scala","graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1461259258283_-1282574022","id":"20160421-182058_712100445","dateCreated":"Apr 21, 2016 6:20:58 PM","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:69"}],"name":"Spark streaming","id":"2BJ5P5YYW","angularObjects":{"2BB6W6HEM":[],"2BCZZ522N":[],"2BAYJQ4PG":[],"2BDKRRF48":[],"2BBT71DJY":[],"2BDF5SW4A":[],"2BBEAN82F":[],"2BCJU7P3F":[],"2BCDBU1V6":[],"2BCSSP4RR":[],"2BA8N9398":[],"2BBK289D4":[],"2BD57MS5Q":[],"2BCXXX8F4":[],"2BCRATNWC":[],"2BC6EVS94":[],"2BCXQNU5Q":[]},"config":{"looknfeel":"default"},"info":{}}